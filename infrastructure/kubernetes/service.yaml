apiVersion: v1
kind: Service
metadata:
  name: cognify-api-service
  namespace: cognify
  labels:
    app: cognify-api
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: cognify-api

---
apiVersion: v1
kind: Service
metadata:
  name: qdrant-service
  namespace: cognify
  labels:
    app: qdrant
spec:
  type: ClusterIP
  ports:
  - port: 6333
    targetPort: 6333
    protocol: TCP
    name: http
  - port: 6334
    targetPort: 6334
    protocol: TCP
    name: grpc
  selector:
    app: qdrant

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: cognify
  labels:
    app: redis
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  selector:
    app: redis

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cognify-ingress
  namespace: cognify
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - api.cognify.ai
    secretName: cognify-tls-secret
  rules:
  - host: api.cognify.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: cognify-api-service
            port:
              number: 80

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cognify-config
  namespace: cognify
data:
  qdrant-url: "http://qdrant-service:6333"
  redis-url: "redis://redis-service:6379/0"
  environment: "production"

---
apiVersion: v1
kind: Secret
metadata:
  name: cognify-secrets
  namespace: cognify
type: Opaque
stringData:
  database-url: "postgresql://cognify:${DB_PASSWORD}@postgres-service:5432/cognify"
  openai-api-key: "${OPENAI_API_KEY}"
  jwt-secret-key: "${JWT_SECRET_KEY}"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: qdrant-pvc
  namespace: cognify
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: cognify
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: fast-ssd
